name: Release Components

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: true
        description: Federation release version
        
jobs:
  # harmonizer_pr:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v3

  #     - name: Setup Node.js 16
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 16

  #     - name: start
  #       run: |
  #         echo "${{ github.event.inputs.version }}"

  #     - name: Update @apollo/composition
  #       run: npm i --prefix ./federation-2/harmonizer -E @apollo/composition@${{github.event.inputs.version}}
        
  #     - name: Install Rustup
  #       run: curl https://sh.rustup.rs -sSf | sh -s -- -y
        
  #     - name: Run cargo xtask
  #       run: cargo xtask dist --debug

  #     - name: Create Pull Request
  #       uses: peter-evans/create-pull-request@v4
  #       with:
  #         title: "Automated PR for harmonizer release ${{github.event.inputs.version}}"
  router-bridge_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # - name: Install Rustup
      #   run: curl https://sh.rustup.rs -sSf | sh -s -- -y

      # - name: Install Cargo edit
      #   run: cargo install cargo-edit
        
      - name: start
        run: |
          echo "${{ github.event.inputs.version }}"
          cd federation-2
          cargo metadata --format-version 1 > /tmp/cargo-metadata-out
          echo "here"
          cat /tmp/cargo-metadata-out
          OLD_VERSION=`cat /tmp/cargo-metadata-out |jq -r '.packages[] | select(.name=="router-bridge") | .version'`
          NEW_VERSION=`echo $OLD_VERSION | python3 -c 'import sys; version=sys.stdin.readline().split("+")[0].split("."); version[2] = str(int(version[2]) + 1); print(".".join(version))'
          echo "new version is " $NEW_VERSION