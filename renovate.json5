{
  "extends": [
    "config:base",
    ":semanticCommits",
  ],
  // Keep automerge off for now, while we validate this works.
  "automerge": false,
  "ignorePaths": [
  
    // Add the Renovate config:base defaults
    "**/node_modules/**",
    "**/bower_components/**",
    "**/vendor/**",
    "**/examples/**",
    "**/fixtures/**",
    "**/test/**",
    "**/tests/**",

    // But also, let's exclude Federation 1.
    "federation-1/**"
  ],
  "packageRules": [
    // Bunch up all non-major npm dependencies into a single PR.  In the common case
    // where the upgrades apply cleanly, this causes less noise and is resolved faster
    // than starting a bunch of upgrades in parallel for what may turn out to be
    // a suite of related packages all released at once.
    //
    // Since too much in the Rust ecosystem is pre-1.0, we make an exception here.
    {
      "matchCurrentVersion": "< 1.0.0",
      "separateMinorPatch": true,
      "matchManagers": [ "cargo" ],
      "minor": {
        "groupName": "cargo pre-1.0 packages",
        "groupSlug": "cargo-all-pre-1.0",
        "automerge": false, // eventually true?
      },
      "patch": {
        "groupName": "cargo pre-1.0 packages",
        "groupSlug": "cargo-all-pre-1.0",
        "automerge": false, // eventually true?
      }
    },
    // npm by itself for non-major >= 1.0.0
    {
      "matchCurrentVersion": ">= 1.0.0",
      "matchManagers": [ "npm" ],
      "matchUpdateTypes": ["minor", "patch", "pin", "digest"],
      "groupName": "all npm non-major packages >= 1.0",
      "groupSlug": "npm-all-non-major-gte-1.0",
      "automerge": false,
    },
    // cargo by itself for non-major >= 1.0.0
    {
      "matchCurrentVersion": ">= 1.0.0",
      "matchManagers": [ "cargo" ],
      "matchUpdateTypes": ["minor", "patch", "pin", "digest"],
      "groupName": "all cargo non-major packages >= 1.0",
      "groupSlug": "cargo-all-non-major-gte-1.0",
      "automerge": false,
    },

    // We'll review these in a PR of their own since it has the most direct runtime
    // implications on users that we'd like to be very intentional about.
    {
      "matchPackagePrefixes": ["deno_"],
      "groupName": "deno updates",
      "groupSlug": "rust-deno-updates",
      "matchManagers": ["cargo"],
      "automerge": false
    }
  ]
}
