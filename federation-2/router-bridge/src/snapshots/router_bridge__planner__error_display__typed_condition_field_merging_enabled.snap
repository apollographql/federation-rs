---
source: router-bridge/src/planner.rs
expression: "serde_json::to_string_pretty(&planner.plan(\"query Search($movieParams: String, $articleParams: String) {\n                    search {\n                      __typename\n                      ... on MovieResult {\n                        id\n                        sections {\n                          ... on EntityCollectionSection {\n                            id\n                            artwork(params: $movieParams)\n                          }\n                        }\n                      }\n                      ... on ArticleResult {\n                        id\n                        sections {\n                          ... on EntityCollectionSection {\n                            id\n                            artwork(params: $articleParams)\n                            title\n                          }\n                        }\n                      }\n                    }\n                  }\".to_string(),\n                                None,\n                                PlanOptions {\n                                    ..Default::default()\n                                }).await.unwrap().data.unwrap()).unwrap()"
---
{
  "queryPlan": {
    "kind": "QueryPlan",
    "node": {
      "kind": "Sequence",
      "nodes": [
        {
          "kind": "Fetch",
          "serviceName": "searchSubgraph",
          "variableUsages": [],
          "operation": "query Search__searchSubgraph__0{search{__typename ...on MovieResult{id sections{__typename ...on EntityCollectionSection{__typename id}}}...on ArticleResult{id sections{__typename ...on EntityCollectionSection{__typename id}}}}}",
          "operationKind": "query",
          "operationName": "Search__searchSubgraph__0"
        },
        {
          "kind": "Parallel",
          "nodes": [
            {
              "kind": "Flatten",
              "path": [
                "",
                "search",
                "@|[MovieResult]",
                "sections",
                "@"
              ],
              "node": {
                "kind": "Fetch",
                "serviceName": "artworkSubgraph",
                "requires": [
                  {
                    "kind": "InlineFragment",
                    "typeCondition": "EntityCollectionSection",
                    "selections": [
                      {
                        "kind": "Field",
                        "name": "__typename"
                      },
                      {
                        "kind": "Field",
                        "name": "id"
                      }
                    ]
                  }
                ],
                "variableUsages": [
                  "movieParams"
                ],
                "operation": "query Search__artworkSubgraph__1($representations:[_Any!]!$movieParams:String){_entities(representations:$representations){...on EntityCollectionSection{artwork(params:$movieParams)}}}",
                "operationKind": "query",
                "operationName": "Search__artworkSubgraph__1"
              }
            },
            {
              "kind": "Flatten",
              "path": [
                "",
                "search",
                "@|[ArticleResult]",
                "sections",
                "@"
              ],
              "node": {
                "kind": "Fetch",
                "serviceName": "artworkSubgraph",
                "requires": [
                  {
                    "kind": "InlineFragment",
                    "typeCondition": "EntityCollectionSection",
                    "selections": [
                      {
                        "kind": "Field",
                        "name": "__typename"
                      },
                      {
                        "kind": "Field",
                        "name": "id"
                      }
                    ]
                  }
                ],
                "variableUsages": [
                  "articleParams"
                ],
                "operation": "query Search__artworkSubgraph__2($representations:[_Any!]!$articleParams:String){_entities(representations:$representations){...on EntityCollectionSection{artwork(params:$articleParams)title}}}",
                "operationKind": "query",
                "operationName": "Search__artworkSubgraph__2"
              }
            }
          ]
        }
      ]
    }
  },
  "formattedQueryPlan": "QueryPlan {\n  Sequence {\n    Fetch(service: \"searchSubgraph\") {\n      {\n        search {\n          __typename\n          ... on MovieResult {\n            id\n            sections {\n              __typename\n              ... on EntityCollectionSection {\n                __typename\n                id\n              }\n            }\n          }\n          ... on ArticleResult {\n            id\n            sections {\n              __typename\n              ... on EntityCollectionSection {\n                __typename\n                id\n              }\n            }\n          }\n        }\n      }\n    },\n    Parallel {\n      Flatten(path: \".search.@|[MovieResult].sections.@\") {\n        Fetch(service: \"artworkSubgraph\") {\n          {\n            ... on EntityCollectionSection {\n              __typename\n              id\n            }\n          } =>\n          {\n            ... on EntityCollectionSection {\n              artwork(params: $movieParams)\n            }\n          }\n        },\n      },\n      Flatten(path: \".search.@|[ArticleResult].sections.@\") {\n        Fetch(service: \"artworkSubgraph\") {\n          {\n            ... on EntityCollectionSection {\n              __typename\n              id\n            }\n          } =>\n          {\n            ... on EntityCollectionSection {\n              artwork(params: $articleParams)\n              title\n            }\n          }\n        },\n      },\n    },\n  },\n}"
}
