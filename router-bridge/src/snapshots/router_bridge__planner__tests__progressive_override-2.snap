---
source: router-bridge/src/planner.rs
assertion_line: 833
expression: "serde_json::to_string_pretty(&payload2.data).unwrap()"
---
{
  "queryPlan": {
    "kind": "QueryPlan",
    "node": {
      "kind": "Sequence",
      "nodes": [
        {
          "kind": "Fetch",
          "serviceName": "Subgraph1",
          "variableUsages": [],
          "operation": "{t{__typename k}}",
          "operationKind": "query"
        },
        {
          "kind": "Flatten",
          "path": [
            "t"
          ],
          "node": {
            "kind": "Fetch",
            "serviceName": "Subgraph2",
            "requires": [
              {
                "kind": "InlineFragment",
                "typeCondition": "T",
                "selections": [
                  {
                    "kind": "Field",
                    "name": "__typename"
                  },
                  {
                    "kind": "Field",
                    "name": "k"
                  }
                ]
              }
            ],
            "variableUsages": [],
            "operation": "query($representations:[_Any!]!){_entities(representations:$representations){...on T{a}}}",
            "operationKind": "query"
          }
        }
      ]
    }
  },
  "formattedQueryPlan": "QueryPlan {\n  Sequence {\n    Fetch(service: \"Subgraph1\") {\n      {\n        t {\n          __typename\n          k\n        }\n      }\n    },\n    Flatten(path: \"t\") {\n      Fetch(service: \"Subgraph2\") {\n        {\n          ... on T {\n            __typename\n            k\n          }\n        } =>\n        {\n          ... on T {\n            a\n          }\n        }\n      },\n    },\n  },\n}"
}
